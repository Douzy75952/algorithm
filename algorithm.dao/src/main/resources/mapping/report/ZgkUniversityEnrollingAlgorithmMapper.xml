<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thinkjoy.report.dao.ZgkUniversityEnrollingAlgorithmMapper" >
  <resultMap id="BaseResultMap" type="com.thinkjoy.report.entity.ZgkUniversityEnrollingAlgorithm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 07 14:28:33 CST 2017.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="university_id" property="universityId" jdbcType="INTEGER" />
    <result column="enroll_area" property="enrollArea" jdbcType="VARCHAR" />
    <result column="enroll_year" property="enrollYear" jdbcType="INTEGER" />
    <result column="enroll_batch" property="enrollBatch" jdbcType="VARCHAR" />
    <result column="major_type" property="majorType" jdbcType="CHAR" />
    <result column="real_enrolled" property="realEnrolled" jdbcType="VARCHAR" />
    <result column="high_score" property="highScore" jdbcType="VARCHAR" />
    <result column="high_rank" property="highRank" jdbcType="INTEGER" />
    <result column="low_score" property="lowScore" jdbcType="VARCHAR" />
    <result column="low_rank" property="lowRank" jdbcType="INTEGER" />
    <result column="avg_score" property="avgScore" jdbcType="VARCHAR" />
    <result column="avg_rank" property="avgRank" jdbcType="INTEGER" />
    <result column="plan_enroll" property="planEnroll" jdbcType="INTEGER" />
    <result column="std_high_rank" property="stdHighRank" jdbcType="INTEGER" />
    <result column="std_low_rank" property="stdLowRank" jdbcType="INTEGER" />
    <result column="std_avg_rank" property="stdAvgRank" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ReportAlgorithmRankMap" type="com.thinkjoy.report.view.ReportAlgorithmRank">
    <result column="sumHigh" property="sumHigh" jdbcType="INTEGER" />
    <result column="sumLow" property="sumLow" jdbcType="INTEGER" />
    <result column="sumAvgR" property="sumAvgR" jdbcType="INTEGER" />
    <result column="stdHigh" property="stdHigh" jdbcType="INTEGER" />
    <result column="stdLow" property="stdLow" jdbcType="INTEGER" />
    <result column="stdAvgR" property="stdAvgR" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="AreaMap" type="com.thinkjoy.report.view.AreaView">
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="StdMap" type="com.thinkjoy.report.view.StdView">
    <result column="searchKey" property="searchKey" jdbcType="VARCHAR" />
    <result column="sumHigh" property="sumHigh" jdbcType="INTEGER" />
    <result column="sumLow" property="sumLow" jdbcType="INTEGER" />
    <result column="sumAvgR" property="sumAvgR" jdbcType="INTEGER" />
    <result column="stdHigh" property="stdHigh" jdbcType="INTEGER" />
    <result column="stdLow" property="stdLow" jdbcType="INTEGER" />
    <result column="stdAvgR" property="stdAvgR" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 07 14:28:33 CST 2017.
    -->
    id, university_id, enroll_area, enroll_year, enroll_batch, major_type, real_enrolled, 
    high_score, high_rank, low_score, low_rank, avg_score, avg_rank, plan_enroll, std_high_rank, 
    std_low_rank, std_avg_rank
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 07 14:28:33 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from zgk_university_enrolling_algorithm
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 07 14:28:33 CST 2017.
    -->
    delete from zgk_university_enrolling_algorithm
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.thinkjoy.report.entity.ZgkUniversityEnrollingAlgorithm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 07 14:28:33 CST 2017.
    -->
    insert into zgk_university_enrolling_algorithm (id, university_id, enroll_area, 
      enroll_year, enroll_batch, major_type, 
      real_enrolled, high_score, high_rank, 
      low_score, low_rank, avg_score, 
      avg_rank, plan_enroll, std_high_rank, 
      std_low_rank, std_avg_rank)
    values (#{id,jdbcType=INTEGER}, #{universityId,jdbcType=INTEGER}, #{enrollArea,jdbcType=VARCHAR}, 
      #{enrollYear,jdbcType=INTEGER}, #{enrollBatch,jdbcType=VARCHAR}, #{majorType,jdbcType=CHAR}, 
      #{realEnrolled,jdbcType=VARCHAR}, #{highScore,jdbcType=VARCHAR}, #{highRank,jdbcType=INTEGER}, 
      #{lowScore,jdbcType=VARCHAR}, #{lowRank,jdbcType=INTEGER}, #{avgScore,jdbcType=VARCHAR}, 
      #{avgRank,jdbcType=INTEGER}, #{planEnroll,jdbcType=INTEGER}, #{stdHighRank,jdbcType=INTEGER}, 
      #{stdLowRank,jdbcType=INTEGER}, #{stdAvgRank,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.thinkjoy.report.entity.ZgkUniversityEnrollingAlgorithm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 07 14:28:33 CST 2017.
    -->
    insert into zgk_university_enrolling_algorithm
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="universityId != null" >
        university_id,
      </if>
      <if test="enrollArea != null" >
        enroll_area,
      </if>
      <if test="enrollYear != null" >
        enroll_year,
      </if>
      <if test="enrollBatch != null" >
        enroll_batch,
      </if>
      <if test="majorType != null" >
        major_type,
      </if>
      <if test="realEnrolled != null" >
        real_enrolled,
      </if>
      <if test="highScore != null" >
        high_score,
      </if>
      <if test="highRank != null" >
        high_rank,
      </if>
      <if test="lowScore != null" >
        low_score,
      </if>
      <if test="lowRank != null" >
        low_rank,
      </if>
      <if test="avgScore != null" >
        avg_score,
      </if>
      <if test="avgRank != null" >
        avg_rank,
      </if>
      <if test="planEnroll != null" >
        plan_enroll,
      </if>
      <if test="stdHighRank != null" >
        std_high_rank,
      </if>
      <if test="stdLowRank != null" >
        std_low_rank,
      </if>
      <if test="stdAvgRank != null" >
        std_avg_rank,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="universityId != null" >
        #{universityId,jdbcType=INTEGER},
      </if>
      <if test="enrollArea != null" >
        #{enrollArea,jdbcType=VARCHAR},
      </if>
      <if test="enrollYear != null" >
        #{enrollYear,jdbcType=INTEGER},
      </if>
      <if test="enrollBatch != null" >
        #{enrollBatch,jdbcType=VARCHAR},
      </if>
      <if test="majorType != null" >
        #{majorType,jdbcType=CHAR},
      </if>
      <if test="realEnrolled != null" >
        #{realEnrolled,jdbcType=VARCHAR},
      </if>
      <if test="highScore != null" >
        #{highScore,jdbcType=VARCHAR},
      </if>
      <if test="highRank != null" >
        #{highRank,jdbcType=INTEGER},
      </if>
      <if test="lowScore != null" >
        #{lowScore,jdbcType=VARCHAR},
      </if>
      <if test="lowRank != null" >
        #{lowRank,jdbcType=INTEGER},
      </if>
      <if test="avgScore != null" >
        #{avgScore,jdbcType=VARCHAR},
      </if>
      <if test="avgRank != null" >
        #{avgRank,jdbcType=INTEGER},
      </if>
      <if test="planEnroll != null" >
        #{planEnroll,jdbcType=INTEGER},
      </if>
      <if test="stdHighRank != null" >
        #{stdHighRank,jdbcType=INTEGER},
      </if>
      <if test="stdLowRank != null" >
        #{stdLowRank,jdbcType=INTEGER},
      </if>
      <if test="stdAvgRank != null" >
        #{stdAvgRank,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.thinkjoy.report.entity.ZgkUniversityEnrollingAlgorithm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 07 14:28:33 CST 2017.
    -->
    update zgk_university_enrolling_algorithm
    <set >
      <if test="universityId != null" >
        university_id = #{universityId,jdbcType=INTEGER},
      </if>
      <if test="enrollArea != null" >
        enroll_area = #{enrollArea,jdbcType=VARCHAR},
      </if>
      <if test="enrollYear != null" >
        enroll_year = #{enrollYear,jdbcType=INTEGER},
      </if>
      <if test="enrollBatch != null" >
        enroll_batch = #{enrollBatch,jdbcType=VARCHAR},
      </if>
      <if test="majorType != null" >
        major_type = #{majorType,jdbcType=CHAR},
      </if>
      <if test="realEnrolled != null" >
        real_enrolled = #{realEnrolled,jdbcType=VARCHAR},
      </if>
      <if test="highScore != null" >
        high_score = #{highScore,jdbcType=VARCHAR},
      </if>
      <if test="highRank != null" >
        high_rank = #{highRank,jdbcType=INTEGER},
      </if>
      <if test="lowScore != null" >
        low_score = #{lowScore,jdbcType=VARCHAR},
      </if>
      <if test="lowRank != null" >
        low_rank = #{lowRank,jdbcType=INTEGER},
      </if>
      <if test="avgScore != null" >
        avg_score = #{avgScore,jdbcType=VARCHAR},
      </if>
      <if test="avgRank != null" >
        avg_rank = #{avgRank,jdbcType=INTEGER},
      </if>
      <if test="planEnroll != null" >
        plan_enroll = #{planEnroll,jdbcType=INTEGER},
      </if>
      <if test="stdHighRank != null" >
        std_high_rank = #{stdHighRank,jdbcType=INTEGER},
      </if>
      <if test="stdLowRank != null" >
        std_low_rank = #{stdLowRank,jdbcType=INTEGER},
      </if>
      <if test="stdAvgRank != null" >
        std_avg_rank = #{stdAvgRank,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.thinkjoy.report.entity.ZgkUniversityEnrollingAlgorithm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 07 14:28:33 CST 2017.
    -->
    update zgk_university_enrolling_algorithm
    set university_id = #{universityId,jdbcType=INTEGER},
      enroll_area = #{enrollArea,jdbcType=VARCHAR},
      enroll_year = #{enrollYear,jdbcType=INTEGER},
      enroll_batch = #{enrollBatch,jdbcType=VARCHAR},
      major_type = #{majorType,jdbcType=CHAR},
      real_enrolled = #{realEnrolled,jdbcType=VARCHAR},
      high_score = #{highScore,jdbcType=VARCHAR},
      high_rank = #{highRank,jdbcType=INTEGER},
      low_score = #{lowScore,jdbcType=VARCHAR},
      low_rank = #{lowRank,jdbcType=INTEGER},
      avg_score = #{avgScore,jdbcType=VARCHAR},
      avg_rank = #{avgRank,jdbcType=INTEGER},
      plan_enroll = #{planEnroll,jdbcType=INTEGER},
      std_high_rank = #{stdHighRank,jdbcType=INTEGER},
      std_low_rank = #{stdLowRank,jdbcType=INTEGER},
      std_avg_rank = #{stdAvgRank,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectModel" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
     from 
     zgk_algorithm.zgk_university_enrolling_algorithm
    <where >
      <if test="id != null" >
         and id= #{id,jdbcType=INTEGER}
      </if>
      <if test="universityId != null" >
         and university_id= #{universityId,jdbcType=INTEGER}
      </if>
      <if test="enrollArea != null" >
         and enroll_area= #{enrollArea,jdbcType=VARCHAR}
      </if>
      <if test="enrollYear != null" >
         and enroll_year= #{enrollYear,jdbcType=INTEGER}
      </if>
      <if test="enrollBatch != null" >
         and enroll_batch= #{enrollBatch,jdbcType=VARCHAR}
      </if>
      <if test="majorType != null" >
         and major_type= #{majorType,jdbcType=CHAR}
      </if>
      <if test="realEnrolled != null" >
         and real_enrolled= #{realEnrolled,jdbcType=VARCHAR}
      </if>
      <if test="highScore != null" >
         and high_score= #{highScore,jdbcType=VARCHAR}
      </if>
      <if test="highRank != null" >
         and high_rank= #{highRank,jdbcType=INTEGER}
      </if>
      <if test="lowScore != null" >
         and low_score= #{lowScore,jdbcType=VARCHAR}
      </if>
      <if test="lowRank != null" >
         and low_rank= #{lowRank,jdbcType=INTEGER}
      </if>
      <if test="avgScore != null" >
         and avg_score= #{avgScore,jdbcType=VARCHAR}
      </if>
      <if test="avgRank != null" >
         and avg_rank= #{avgRank,jdbcType=INTEGER}
      </if>
      <if test="planEnroll != null" >
         and plan_enroll= #{planEnroll,jdbcType=INTEGER}
      </if>
      <if test="stdHighRank != null" >
         and std_high_rank= #{stdHighRank,jdbcType=INTEGER}
      </if>
      <if test="stdLowRank != null" >
         and std_low_rank= #{stdLowRank,jdbcType=INTEGER}
      </if>
      <if test="stdAvgRank != null" >
         and std_avg_rank= #{stdAvgRank,jdbcType=INTEGER}
      </if>
    </where>
    <if test="order != null" >
      <![CDATA[  order by  ${order} ]]>
    </if>
  </select>
  <select id="selectList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
     from 
     zgk_algorithm.zgk_university_enrolling_algorithm
    <where >
      <if test="id != null" >
         and id= #{id,jdbcType=INTEGER}
      </if>
      <if test="universityId != null" >
         and university_id= #{universityId,jdbcType=INTEGER}
      </if>
      <if test="enrollArea != null" >
         and enroll_area= #{enrollArea,jdbcType=VARCHAR}
      </if>
      <if test="enrollYear != null" >
         and enroll_year= #{enrollYear,jdbcType=INTEGER}
      </if>
      <if test="enrollBatch != null" >
         and enroll_batch= #{enrollBatch,jdbcType=VARCHAR}
      </if>
      <if test="majorType != null" >
         and major_type= #{majorType,jdbcType=CHAR}
      </if>
      <if test="realEnrolled != null" >
         and real_enrolled= #{realEnrolled,jdbcType=VARCHAR}
      </if>
      <if test="highScore != null" >
         and high_score= #{highScore,jdbcType=VARCHAR}
      </if>
      <if test="highRank != null" >
         and high_rank= #{highRank,jdbcType=INTEGER}
      </if>
      <if test="lowScore != null" >
         and low_score= #{lowScore,jdbcType=VARCHAR}
      </if>
      <if test="lowRank != null" >
         and low_rank= #{lowRank,jdbcType=INTEGER}
      </if>
      <if test="avgScore != null" >
         and avg_score= #{avgScore,jdbcType=VARCHAR}
      </if>
      <if test="avgRank != null" >
         and avg_rank= #{avgRank,jdbcType=INTEGER}
      </if>
      <if test="planEnroll != null" >
         and plan_enroll= #{planEnroll,jdbcType=INTEGER}
      </if>
      <if test="stdHighRank != null" >
         and std_high_rank= #{stdHighRank,jdbcType=INTEGER}
      </if>
      <if test="stdLowRank != null" >
         and std_low_rank= #{stdLowRank,jdbcType=INTEGER}
      </if>
      <if test="stdAvgRank != null" >
         and std_avg_rank= #{stdAvgRank,jdbcType=INTEGER}
      </if>
    </where>
    <if test="order != null" >
      <![CDATA[  order by  ${order} ]]>
    </if>
  </select>
  <select id="selectPageList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
     from 
     zgk_algorithm.zgk_university_enrolling_algorithm
    <where >
      <if test="id != null" >
         and id= #{id,jdbcType=INTEGER}
      </if>
      <if test="universityId != null" >
         and university_id= #{universityId,jdbcType=INTEGER}
      </if>
      <if test="enrollArea != null" >
         and enroll_area= #{enrollArea,jdbcType=VARCHAR}
      </if>
      <if test="enrollYear != null" >
         and enroll_year= #{enrollYear,jdbcType=INTEGER}
      </if>
      <if test="enrollBatch != null" >
         and enroll_batch= #{enrollBatch,jdbcType=VARCHAR}
      </if>
      <if test="majorType != null" >
         and major_type= #{majorType,jdbcType=CHAR}
      </if>
      <if test="realEnrolled != null" >
         and real_enrolled= #{realEnrolled,jdbcType=VARCHAR}
      </if>
      <if test="highScore != null" >
         and high_score= #{highScore,jdbcType=VARCHAR}
      </if>
      <if test="highRank != null" >
         and high_rank= #{highRank,jdbcType=INTEGER}
      </if>
      <if test="lowScore != null" >
         and low_score= #{lowScore,jdbcType=VARCHAR}
      </if>
      <if test="lowRank != null" >
         and low_rank= #{lowRank,jdbcType=INTEGER}
      </if>
      <if test="avgScore != null" >
         and avg_score= #{avgScore,jdbcType=VARCHAR}
      </if>
      <if test="avgRank != null" >
         and avg_rank= #{avgRank,jdbcType=INTEGER}
      </if>
      <if test="planEnroll != null" >
         and plan_enroll= #{planEnroll,jdbcType=INTEGER}
      </if>
      <if test="stdHighRank != null" >
         and std_high_rank= #{stdHighRank,jdbcType=INTEGER}
      </if>
      <if test="stdLowRank != null" >
         and std_low_rank= #{stdLowRank,jdbcType=INTEGER}
      </if>
      <if test="stdAvgRank != null" >
         and std_avg_rank= #{stdAvgRank,jdbcType=INTEGER}
      </if>
    </where>
    <if test="order != null" >
      <![CDATA[  order by  ${order} ]]>
    </if>
    <if test="page != null" >
      <![CDATA[  limit #{page.begin}, #{page.end} ]]>
    </if>
  </select>
  <select id="selectCount" resultType="int" parameterType="java.util.Map" >
     select
     count(1)
     from 
     zgk_algorithm.zgk_university_enrolling_algorithm
    <where >
      <if test="id != null" >
         and id= #{id,jdbcType=INTEGER}
      </if>
      <if test="universityId != null" >
         and university_id= #{universityId,jdbcType=INTEGER}
      </if>
      <if test="enrollArea != null" >
         and enroll_area= #{enrollArea,jdbcType=VARCHAR}
      </if>
      <if test="enrollYear != null" >
         and enroll_year= #{enrollYear,jdbcType=INTEGER}
      </if>
      <if test="enrollBatch != null" >
         and enroll_batch= #{enrollBatch,jdbcType=VARCHAR}
      </if>
      <if test="majorType != null" >
         and major_type= #{majorType,jdbcType=CHAR}
      </if>
      <if test="realEnrolled != null" >
         and real_enrolled= #{realEnrolled,jdbcType=VARCHAR}
      </if>
      <if test="highScore != null" >
         and high_score= #{highScore,jdbcType=VARCHAR}
      </if>
      <if test="highRank != null" >
         and high_rank= #{highRank,jdbcType=INTEGER}
      </if>
      <if test="lowScore != null" >
         and low_score= #{lowScore,jdbcType=VARCHAR}
      </if>
      <if test="lowRank != null" >
         and low_rank= #{lowRank,jdbcType=INTEGER}
      </if>
      <if test="avgScore != null" >
         and avg_score= #{avgScore,jdbcType=VARCHAR}
      </if>
      <if test="avgRank != null" >
         and avg_rank= #{avgRank,jdbcType=INTEGER}
      </if>
      <if test="planEnroll != null" >
         and plan_enroll= #{planEnroll,jdbcType=INTEGER}
      </if>
      <if test="stdHighRank != null" >
         and std_high_rank= #{stdHighRank,jdbcType=INTEGER}
      </if>
      <if test="stdLowRank != null" >
         and std_low_rank= #{stdLowRank,jdbcType=INTEGER}
      </if>
      <if test="stdAvgRank != null" >
         and std_avg_rank= #{stdAvgRank,jdbcType=INTEGER}
      </if>
    </where>
  </select>
              <!--扩展-->

  <!--获取分组年份-->
  <select id="selectGroupEnrollingYear" resultType="java.lang.String">
        select enroll_year from zgk_university_enrolling_algorithm group by enroll_year
  </select>
  <!--获取分组区域-->
  <select id="selectGroupEnrollingArea" resultType="java.lang.String">
    select enroll_area from zgk_university_enrolling_algorithm group by enroll_area
  </select>

  <update id="updateRank"  parameterType="java.util.List">

    <foreach collection="rankList" item="item" index="index" open="" close="" separator=";">
      update zgk_university_enrolling_algorithm
        <set>
          ${item.key}=#{item.value}
        </set>
      where id = ${item.id}
    </foreach>

  </update>
  <update id="updateStdRank"  parameterType="java.util.List">

    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
      update zgk_university_enrolling_algorithm
      <set>
          std_high_rank=#{item.stdHighRank},
          std_low_rank=#{item.stdLowRank},
          std_avg_rank=#{item.stdAvgRank}
      </set>
      where id = ${item.id}
    </foreach>

  </update>
  <select id="selectRealEnrollSum" resultType="java.lang.Integer" parameterType="map">
        select sum(real_enrolled) as realRnrolled from zgk_university_enrolling_algorithm
        <where>
          <if test="enrollArea!=null">
               and enroll_area=#{enrollArea}
          </if>
          <if test="enrollYear!=null">
            and enroll_year=#{enrollYear}
          </if>
          <if test="majorType!=null">
            and major_type=#{majorType}
          </if>
        </where>
         order by high_rank asc
  </select>
  <select id="selectEnrollYearCount" resultType="java.lang.Integer" parameterType="map">
    select count(1) as count from
    (select enroll_year from zgk_university_enrolling_algorithm
     <where>
       <if test="universityId!=null">
         and university_id=#{universityId}
       </if>
       <if test="enrollArea!=null">
         and enroll_area=#{enrollArea}
       </if>
       <if test="majorType!=null">
         and major_type=#{majorType}
       </if>
     </where>
     group by enroll_year)a
  </select>
  <select id="selectEnrollYearCountByUid" resultMap="AreaMap" parameterType="map">
    select concat(enroll_area,'-',major_type) as area,count(DISTINCT enroll_year) as count from
    zgk_university_enrolling_algorithm
     <where>
       <if test="universityId!=null">
         and university_id=#{universityId}
       </if>
     </where>
     group by enroll_area,major_type
  </select>
  <select id="selectUniversityIdGroup" resultType="String">
      select university_id from zgk_university_enrolling_algorithm group by university_id
  </select>
  <select id="selectHistorySumRankByUid" resultMap="StdMap" parameterType="map">
    select concat(enroll_area,'-',major_type) as searchkey,
    sum(std_high_rank) as sumHigh, sum(std_low_rank) as sumLow,sum(std_avg_rank) as sumAvgR ,
    std(std_high_rank) as stdHigh,std(std_low_rank) as stdLow, std(std_avg_rank) as stdAvgR
    from
    zgk_university_enrolling_algorithm
    <where>
      <if test="universityId!=null">
        and university_id=#{universityId}
      </if>
    </where>
    group by enroll_area,major_type
  </select>
  <select id="selectHistorySumRank" resultMap="ReportAlgorithmRankMap" parameterType="map">
    select
    sum(std_high_rank) as sumHigh, sum(std_low_rank) as sumLow,sum(std_avg_rank) as sumAvgR ,
    std(std_high_rank) as stdHigh,std(std_low_rank) as stdLow, std(std_avg_rank) as stdAvgR
    from
    zgk_university_enrolling_algorithm
      <where>
        <if test="universityId!=null">
          and university_id=#{universityId}
        </if>
        <if test="enrollArea!=null">
          and enroll_area=#{enrollArea}
        </if>
        <if test="majorType!=null">
          and  major_type=#{majorType}
        </if>
      </where>
  </select>
  <select id="selectHistoryStdRank" resultMap="ReportAlgorithmRankMap" parameterType="map">
    select std(std_high_rank) as high,std(std_low_rank) as low,std(std_avg_rank) as avgR from zgk_university_enrolling_algorithm
    <where>
      <if test="universityId!=null">
        and university_id=#{universityId}
      </if>
      <if test="enrollArea!=null">
        and enroll_area=#{enrollArea}
      </if>
      <if test="majorType!=null">
        and  major_type=#{majorType}
      </if>
    </where>
  </select>
</mapper>